{"version":3,"sources":["services/auth.service.ts","components/Login.tsx","components/Register.tsx","services/auth-token.ts","services/user.service.ts","components/Home.tsx","components/Profile.tsx","components/BoardUser.tsx","common/EventBus.ts","components/BoardModerator.tsx","components/BoardAdmin.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_URL","getCurrentUser","userStr","localStorage","getItem","JSON","parse","Login","history","useState","loading","setLoading","message","setMessage","validationSchema","Yup","shape","username","required","password","className","src","alt","initialValues","onSubmit","formValue","axios","post","then","response","data","token","setItem","stringify","login","push","window","location","reload","error","resMessage","toString","htmlFor","name","type","component","disabled","role","Register","successful","setSuccessful","test","val","length","email","register","authHeader","user","accessToken","Home","content","setContent","useEffect","get","_content","Profile","currentUser","substring","substr","id","roles","map","index","BoardUser","headers","Authorization","authToken","console","log","eventBus","on","event","callback","document","addEventListener","e","dispatch","dispatchEvent","CustomEvent","detail","remove","removeEventListener","BoardModerator","status","EventBus","BoardAdmin","App","showModeratorBoard","setShowModeratorBoard","showAdminBoard","setShowAdminBoard","undefined","setCurrentUser","AuthService","logOut","removeItem","to","href","onClick","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.89c23a6f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/api/public/';\r\n\r\nexport const register = (username: string, email: string, password: string) => {\r\n  return axios.post<any>(API_URL + 'register', {\r\n    username,\r\n    email,\r\n    password,\r\n  });\r\n};\r\n\r\nexport const login = (username: string, password: string) => {\r\n  return axios\r\n    .post<any>(API_URL + 'authenticate', {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.token) {\r\n        localStorage.setItem('user', JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('user');\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  const userStr = localStorage.getItem('user');\r\n  if (userStr) return JSON.parse(userStr);\r\n\r\n  return null;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { login } from '../services/auth.service';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\ninterface RouterProps {\r\n  history: string;\r\n}\r\n\r\ntype Props = RouteComponentProps<RouterProps>;\r\n\r\nconst Login: React.FC<Props> = ({ history }) => {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [message, setMessage] = useState<string>('');\r\n\r\n  const initialValues: {\r\n    username: string;\r\n    password: string;\r\n  } = {\r\n    username: '',\r\n    password: '',\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required('This field is required!'),\r\n    password: Yup.string().required('This field is required!'),\r\n  });\r\n\r\n  const handleLogin = (formValue: { username: string; password: string }) => {\r\n    const { username, password } = formValue;\r\n\r\n    setMessage('');\r\n    setLoading(true);\r\n\r\n    login(username, password).then(\r\n      () => {\r\n        history.push('/profile');\r\n        window.location.reload();\r\n      },\r\n      (error) => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setLoading(false);\r\n        setMessage(resMessage);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleLogin}\r\n        >\r\n          <Form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Field name=\"username\" type=\"text\" className=\"form-control\" />\r\n              <ErrorMessage\r\n                name=\"username\"\r\n                component=\"div\"\r\n                className=\"alert alert-danger\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Field name=\"password\" type=\"password\" className=\"form-control\" />\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                component=\"div\"\r\n                className=\"alert alert-danger\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={loading}\r\n              >\r\n                {loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Form>\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport IUser from '../types/user.type';\r\nimport { register } from '../services/auth.service';\r\n\r\nconst Register: React.FC = () => {\r\n  const [successful, setSuccessful] = useState<boolean>(false);\r\n  const [message, setMessage] = useState<string>('');\r\n\r\n  const initialValues: IUser = {\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .test(\r\n        'len',\r\n        'The username must be between 3 and 20 characters.',\r\n        (val: any) =>\r\n          val && val.toString().length >= 3 && val.toString().length <= 20\r\n      )\r\n      .required('This field is required!'),\r\n    email: Yup.string()\r\n      .email('This is not a valid email.')\r\n      .required('This field is required!'),\r\n    password: Yup.string()\r\n      .test(\r\n        'len',\r\n        'The password must be between 6 and 40 characters.',\r\n        (val: any) =>\r\n          val && val.toString().length >= 6 && val.toString().length <= 40\r\n      )\r\n      .required('This field is required!'),\r\n  });\r\n\r\n  const handleRegister = (formValue: IUser) => {\r\n    const { username, email, password } = formValue;\r\n\r\n    register(username, email, password).then(\r\n      (response) => {\r\n        setMessage(response.data.message);\r\n        setSuccessful(true);\r\n      },\r\n      (error) => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setMessage(resMessage);\r\n        setSuccessful(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleRegister}\r\n        >\r\n          <Form>\r\n            {!successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\"> Username </label>\r\n                  <Field name=\"username\" type=\"text\" className=\"form-control\" />\r\n                  <ErrorMessage\r\n                    name=\"username\"\r\n                    component=\"div\"\r\n                    className=\"alert alert-danger\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\"> Email </label>\r\n                  <Field name=\"email\" type=\"email\" className=\"form-control\" />\r\n                  <ErrorMessage\r\n                    name=\"email\"\r\n                    component=\"div\"\r\n                    className=\"alert alert-danger\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\"> Password </label>\r\n                  <Field\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"password\"\r\n                    component=\"div\"\r\n                    className=\"alert alert-danger\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                    Sign Up\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    successful ? 'alert alert-success' : 'alert alert-danger'\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Form>\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","export default function authHeader() {\r\n  const userStr = localStorage.getItem('user');\r\n  let user = null;\r\n  if (userStr) user = JSON.parse(userStr);\r\n\r\n  if (user && user.accessToken) {\r\n    return user.accessToken;\r\n  }\r\n  return undefined;\r\n}\r\n","import axios from 'axios';\r\nimport authToken from './auth-token';\r\n\r\nconst API_URL = 'http://localhost:8080/api/test/';\r\n\r\nexport const getPublicContent = () => {\r\n  return axios.get(API_URL + 'all');\r\n};\r\n\r\nexport const getUserBoard = () => {\r\n  return axios.get(API_URL + 'user', {\r\n    headers: {\r\n      Authorization: authToken(),\r\n    },\r\n  });\r\n};\r\n\r\nexport const getModeratorBoard = () => {\r\n  return axios.get(API_URL + 'mod', {\r\n    headers: {\r\n      Authorization: authToken(),\r\n    },\r\n  });\r\n};\r\n\r\nexport const getAdminBoard = () => {\r\n  return axios.get(API_URL + 'admin', {\r\n    headers: {\r\n      Authorization: authToken(),\r\n    },\r\n  });\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { getPublicContent } from '../services/user.service';\r\n\r\nconst Home: React.FC = () => {\r\n  const [content, setContent] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    getPublicContent().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { getCurrentUser } from '../services/auth.service';\r\n\r\nconst Profile: React.FC = () => {\r\n  const currentUser = getCurrentUser();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>\r\n          <strong>{currentUser.username}</strong> Profile\r\n        </h3>\r\n      </header>\r\n      <p>\r\n        <strong>Token:</strong> {currentUser.token.substring(0, 20)} ...{' '}\r\n        {currentUser.token.substr(currentUser.token.length - 20)}\r\n      </p>\r\n      <p>\r\n        <strong>Id:</strong> {currentUser.id}\r\n      </p>\r\n      <p>\r\n        <strong>Email:</strong> {currentUser.email}\r\n      </p>\r\n      <strong>Authorities:</strong>\r\n      <ul>\r\n        {currentUser.roles &&\r\n          currentUser.roles.map((role: string, index: number) => (\r\n            <li key={index}>{role}</li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { getUserBoard } from '../services/user.service';\r\n\r\nconst BoardUser: React.FC = () => {\r\n  const [content, setContent] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    getUserBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        console.log(error.response);\r\n\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardUser;\r\n","const eventBus = {\r\n  on(event: string, callback: EventListener) {\r\n    document.addEventListener(event, (e) => callback(e));\r\n  },\r\n  dispatch(event: string, data?: any) {\r\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\r\n  },\r\n  remove(event: string, callback: EventListener) {\r\n    document.removeEventListener(event, callback);\r\n  },\r\n};\r\n\r\nexport default eventBus;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { getModeratorBoard } from '../services/user.service';\r\nimport EventBus from '../common/EventBus';\r\n\r\nconst BoardModerator: React.FC = () => {\r\n  const [content, setContent] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    getModeratorBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch('logout');\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardModerator;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { getAdminBoard } from '../services/user.service';\r\nimport EventBus from '../common/EventBus';\r\n\r\nconst BoardAdmin: React.FC = () => {\r\n  const [content, setContent] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    getAdminBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch('logout');\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardAdmin;\r\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport * as AuthService from './services/auth.service';\nimport IUser from './types/user.type';\n\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Home from './components/Home';\nimport Profile from './components/Profile';\nimport BoardUser from './components/BoardUser';\nimport BoardModerator from './components/BoardModerator';\nimport BoardAdmin from './components/BoardAdmin';\n\nimport EventBus from './common/EventBus';\n\nconst App: React.FC = () => {\n  const [showModeratorBoard, setShowModeratorBoard] = useState<boolean>(false);\n  const [showAdminBoard, setShowAdminBoard] = useState<boolean>(false);\n  const [currentUser, setCurrentUser] = useState<IUser | undefined>(undefined);\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      setCurrentUser(user);\n      // setShowModeratorBoard(user.roles.includes('ROLE_MODERATOR'));\n      // setShowAdminBoard(user.roles.includes('ROLE_ADMIN'));\n    }\n\n    EventBus.on('logout', logOut);\n\n    return () => {\n      EventBus.remove('logout', logOut);\n    };\n  }, []);\n\n  const logOut = () => {\n    AuthService.logout();\n    setShowModeratorBoard(false);\n    setShowAdminBoard(false);\n    setCurrentUser(undefined);\n  };\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <Link to={'/'} className=\"navbar-brand\">\n          CryptoWallet\n        </Link>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={'/home'} className=\"nav-link\">\n              Home\n            </Link>\n          </li>\n\n          {showModeratorBoard && (\n            <li className=\"nav-item\">\n              <Link to={'/mod'} className=\"nav-link\">\n                Moderator Board\n              </Link>\n            </li>\n          )}\n\n          {showAdminBoard && (\n            <li className=\"nav-item\">\n              <Link to={'/admin'} className=\"nav-link\">\n                Admin Board\n              </Link>\n            </li>\n          )}\n\n          {currentUser && (\n            <li className=\"nav-item\">\n              <Link to={'/user'} className=\"nav-link\">\n                User\n              </Link>\n            </li>\n          )}\n        </div>\n\n        {currentUser ? (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={'/profile'} className=\"nav-link\">\n                {currentUser.username}\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                LogOut\n              </a>\n            </li>\n          </div>\n        ) : (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={'/login'} className=\"nav-link\">\n                Login\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to={'/register'} className=\"nav-link\">\n                Sign Up\n              </Link>\n            </li>\n          </div>\n        )}\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path={['/', '/home']} component={Home} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route path=\"/user\" component={BoardUser} />\n          <Route path=\"/mod\" component={BoardModerator} />\n          <Route path=\"/admin\" component={BoardAdmin} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}