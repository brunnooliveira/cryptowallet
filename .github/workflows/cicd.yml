name: Release - Test, Build & Redeploy
on:
  push:
    branches:
      - 'release/**'
  pull_request:
    branches:
      - 'release/**'
  workflow_dispatch:

jobs:
  pipeline:
    name: Build, Test & Deploy
    runs-on: ubuntu-20.04
    env:
      VERSION: 0.0.2-beta
      DOCKER_REPO: brunnogoncalves/cryptowallet
    steps:
      - name: Checkout Binance-Java-Api
        run: |
          git clone https://github.com/brunnooliveira/binance-java-api.git
          cd binance-java-api
          mvn clean install -DskipTests

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Maven Package
        run: mvn -B clean package -DskipTests

      - name: Maven Verify
        run: mvn -B clean verify

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASS }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_REPO }}:latest -t ${{ secrets.DOCKER_REPO }}:$VERSION .

      - name: Publish Docker image
        run: |
          docker push ${{ secrets.DOCKER_REPO }}:latest
          docker push ${{ secrets.DOCKER_REPO }}:$VERSION

      - name: Deploy Docker Image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ORACLEVM_HOST }}
          username: ${{ secrets.ORACLEVM_USER }}
          key: ${{ secrets.ORACLEVM_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_REPO }}:latest
            sudo docker rm -f cryptowallet
            sudo docker run -d --name=cryptowallet -p 8080:8080 \
              -e JWT_SECRET='${{ secrets.JWT_SECRET }}' \
              -e JWT_EXPIRATION_IN_MS=${{ secrets.JWT_EXPIRATION_IN_MS }} \
              -e MONGO_DB_DATABASE='${{ secrets.MONGO_DB_DATABASE }}' \
              -e MONGO_DB_URI='${{ secrets.MONGO_DB_URI }}' \
              ${{ secrets.DOCKER_REPO }}:latest
